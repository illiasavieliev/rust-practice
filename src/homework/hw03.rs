// Розміри конверта
// Мають бути в діапазоні від 10 до 80 включно
const W: usize = 40; // Ширина конверта
const H: usize = 20; // Висота конверта

fn main() {
    // Перевіряємо, що розміри знаходяться в допустимому діапазоні
    if W < 10 || W > 80 || H < 10 || H > 80 {
        eprintln!("Помилка: Ширина та висота конверта мають бути в діапазоні від 10 до 80.");
        return; // Завершуємо виконання програми
    }

    // Буфер для формування рядка перед друком
    let mut output = String::new();

    // Зовнішній цикл для рядків (висота H)
    for y in 0..H {
        // Внутрішній цикл для стовпців (ширина W)
        for x in 0..W {
            let character = if y == 0 || y == H - 1 {
                // Верхня та нижня межі
                '-'
            } else if x == 0 || x == W - 1 {
                // Ліва та права межі
                '|'
            } else if x == y || x == W - 1 - y {
                // Діагоналі:
                // x == y малює головну діагональ (зверху-зліва вниз-вправо)
                // x == W - 1 - y малює побічну діагональ (зверху-справа вниз-вліво)
                // Вибираємо правильний символ для діагоналі
                if x == y {
                    '\\'
                } else {
                    '/'
                }
            } else {
                // Внутрішній порожній простір
                ' '
            };
            output.push(character); // Додаємо символ до буфера
        }
        output.push('\n'); // Перехід на новий рядок після кожного рядка конверта
    }

    // Використовуємо print! один раз для виведення всього конверта
    print!("{}", output);
    // println! не використовується, оскільки print! вже виводить весь буфер з '\n' в кінці кожного рядка.
    // Якщо б ми не додавали '\n' до output, тоді знадобився б println! після кожного print!
    // але умова "println! один раз" накладає обмеження на весь вивід.
    // Тому весь вивід формуємо в один рядок і друкуємо один раз.
}
